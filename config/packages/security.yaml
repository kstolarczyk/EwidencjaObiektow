security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    users:
      entity:
        class: 'App\Entity\User'
        property: 'username'

  encoders:
    App\Entity\User:
      algorithm: auto

  role_hierarchy:
    ROLE_DESKTOP: ROLE_USER
    ROLE_MOBILE: ROLE_USER
    ROLE_ZATWIERDZ: ROLE_DESKTOP
    ROLE_ADMIN: ROLE_ZATWIERDZ
    ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_MOBILE]
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: lazy
      remember_me:
        secret: '%env(APP_SECRET)%'
      provider: users
      guard:
        authenticators:
          - App\Security\AppAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/Users, roles: ROLE_SUPER_ADMIN }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/profile, roles: ROLE_USER }
    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/Password/Request, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/Password/Reset, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/Api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/, roles: ROLE_USER }
